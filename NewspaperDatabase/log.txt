from news.models import User
from news.models import Author, Post, Comment, Category

User.objects.create_user("petrov") 		#создаем первого пользователя
User.objects.create_user("bogdanov") 	#создаем второго пользователя

#создаем двух новых авторов на основе созданных пользователей 
#первый способ создания, через уникальный ключ

author_1 = Author.objects.create(user=User.objects.get(pk=1))
author_2 = Author.objects.create(user=User.objects.get(pk=2))

#второй способ создания, через имя пользователя

author_1 = Author.objects.create(user=User.objects.get(username="petrov"))
author_2 = Author.objects.create(user=User.objects.get(username="bogdanov"))


#создаем категории новостей

main_topic = Category.objects.create(name="главные новости")
politics = Category.objects.create(name="политика")
sport = Category.objects.create(name="новости спорта")
art = Category.objects.create(name="новости искусства")


#создаем одну новость

covid_news = Post.objects.create(author=author_1, type="n", header="Сокращение срока ПЦР-теста", text="С 72 часов до 48 часов сократила действие отрицательного ПЦР
-теста глава Роспотребнадзора Анна Попова. Новое положение Роспотребнадзора вступает в силу с 8 декабря. Сокращение срока действия ПЦР Попова объяснила рисками распространения в
 России омикрон-штамма коронавируса. Он, по ее словам, вызывает более быструю реакцию организма.")
 
covid_news.category.set([main_topic])


#создаем две статьи

article_arts = Post.objects.create(author=author_1, header="Выставка Михаила Врубеля", text="Выставка М.А. Врубеля станет важнейшим событием года в области и
скусства. Третьяковская галерея обладает самым крупным собранием работ художника и на этой базе выступает «объединителем Врубеля». На выставке будет представлено более 300 произ
ведений из 14 российских и зарубежных музеев. Более 100 работ поступит в экспозицию из Государственного Русского музея (Санкт-Петербург). Выставка разместится на трех этажах, во
 всей возможной полноте представляя многогранный мир Врубеля. Это крупнейший показ произведений мастера за последние 65 лет.")

article_sports = Post.objects.create(author=author_2, header="Бойкот Олимпиады в Китае", text="США будут бойкотировать Олимпийские и Паралимпийские игры в Ки
тае, которые пройдут в феврале 2022 года. Меры носят дипломатический характер. На Олимпиаду не поедут официальные лица страны, американские спортсмены будут участвовать в Играх.
 Таким образом Вашингтон протестует против нарушений прав человека в КНР.")

article_arts.category.set([art, main_topic])
article_sports.category.set([sport, politics])


#создадим доп пользователей-комментаторов

commentator = User.objects.create_user("commentator123")
arts_user = User.objects.create_user("artslover")


user_1 = User.objects.get(pk=1)
user_2 = User.objects.get(pk=2)


#комментируем посты

comment_1 = Comment.objects.create(post=article_arts, user=arts_user, text="Сходили на выставку - нам очень понравилось! Будем рекомендовать друзьям и родным <3")
comment_2 = Comment.objects.create(post=article_arts, user=user_2, text="Давно уже не хожу на выставки в Третьяковку и на эту не пойду. Не понимаю я это ваше
 высокое искусство.")
comment_3 = Comment.objects.create(post=article_sports, user=commentator, text="Забойкотировали Олимпиаду, на которой их и не ждали!")
comment_4 = Comment.objects.create(post=covid_news, user=user_2, text="Ни дня без плохих новостей..")
comment_5 = Comment.objects.create(post=covid_news, user=arts_user, text="Суховато написано.")


#серия лайков-дизлайков

covid_news.like()
covid_news.like()
covid_news.dislike()

article_arts.like()
article_arts.like()
article_arts.like()
article_arts.like()
article_arts.like()

article_sports.like()
article_sports.like()
article_sports.like()
article_sports.like()
article_sports.like()
article_sports.like()
article_sports.dislike()
article_sports.dislike()
article_sports.like()
article_sports.dislike()
article_sports.like()
article_sports.dislike()
article_sports.dislike()
article_sports.dislike()

comment_1.like()
comment_1.like()
comment_1.like()
comment_1.dislike()

comment_2.dislike()
comment_2.dislike()

comment_3.like()
comment_3.like()
comment_3.like()
comment_3.like()

comment_4.like()
comment_4.like()
comment_4.dislike()
comment_4.dislike()

comment_5.like()
comment_5.like()
comment_5.dislike()
comment_5.like()
comment_5.like()
comment_5.like()
comment_5.dislike()
comment_5.like()


# обновляем рейтинги авторов

author_1.update_rating()
author_2.update_rating()


#выведем юзернейм и рейтинг лучшего автора

rank = Author.objects.all().order_by("-rank").values("rank")[0]["rank"]
username = User.objects.get(pk=Author.objects.all().order_by("-rank").values("user")[0]["user"])
print(username, rank)


#данные по лучшей статье

best = Post.objects.all().order_by("-_rank").values("created_datetime", "_rank", "header", "author", "id")[0]
post = Post.objects.get(pk=best["id"])
preview = post.preview()
author_username = Author.objects.get(pk=best["author"]).user

print(best["created_datetime"], author_username,  best["_rank"], best["header"], preview)


#выведем комментарии к лучшей статье

Comment.objects.filter(post=post.id).values("created_datetime", "user", "_rank", "text")
